#!/bin/sh
echo "Precommit hook is running... ‚è≥"
npm run lint:all
ESLINT="$(git rev-parse --show-toplevel)/node_modules/.bin/eslint"

FRONTEND_FILES=$(git diff --cached --name-only --diff-filter=AM | grep -E '(^packages/frontend)(.*)(ts$|tsx$|js$|jsx$)')
BACKEND_FILES=$(git diff --cached --name-only --diff-filter=AM | grep -E '(^packages/backend)(.*)(ts$)')
PASS=true

echo "=============================================================================================================="
echo "Checking branch name... ‚è≥"
LC_ALL=C

local_branch="$(git rev-parse --abbrev-ref HEAD)"

valid_branch_regex="^(backend|contract|frontend)\/(feature|bug|refactoring|hotfix)\/[0-9]+\/[a-z0-9-]+$"

message="
‚õîÔ∏è
There is something wrong with your branch name. \n 
Branch names in this project must adhere to this contract: \n 
backend|contract|frontend/feature|bugfix|improvement|library|prerelease|release|hotfix/<task-id>/task-name. \n 
Your commit will be rejected. You should rename your branch to a valid name and try again.
‚õîÔ∏è"

if [[ ! $local_branch =~ $valid_branch_regex ]]
then
    echo "$message"
    exit 1
fi
echo "‚úÖ Success! ‚úÖ"

echo "=============================================================================================================="
echo "Staged changes:"
echo 'üîé Frontend tracked files: ' $FRONTEND_FILES
echo 'üîé Backend tracked files: ' $BACKEND_FILES
echo "=============================================================================================================="
echo "Mobile validation started... ‚è≥";
for FILE in $FRONTEND_FILES
do
	$ESLINT "$FILE"
  if [[ "$?" == 0 ]]; then
    echo "‚úÖ ESLint Passed: $FILE ‚úÖ"
  else
    echo "‚õîÔ∏è ESLint Failed: $FILE ‚õîÔ∏è"
    PASS=false
  fi
done
echo "=============================================================================================================="
echo "Backend validation started... ‚è≥";

for FILE in $BACKEND_FILES
do
	$ESLINT "$FILE"
  if [[ "$?" == 0 ]]; then
    echo "‚úÖ ESLint Passed: $FILE ‚úÖ"
  else
    echo "‚õîÔ∏è ESLint Failed: $FILE ‚õîÔ∏è"
    PASS=false
  fi
done
echo "=============================================================================================================="


if ! $PASS; then
  echo "‚õîÔ∏è COMMIT FAILED:\n Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n ‚õîÔ∏è"
  exit 1
fi

echo "‚úÖ Success! ‚úÖ"

exit $?